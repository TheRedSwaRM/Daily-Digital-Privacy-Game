name: "Artifact Maker"
on:
  push:
    tags:
      - "v*"

# on: workflow_dispatch


jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Exporting Game
      id: export
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v5.2.1
      with:
        # Defining all the required inputs
        godot_executable_download_url: http://downloads.tuxfamily.org/godotengine/4.2.1/Godot_v4.2.1-stable_linux.x86_64.zip
        godot_export_templates_download_url: http://downloads.tuxfamily.org/godotengine/4.2.1/Godot_v4.2.1-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true
        export_debug: false

      #===========================================
      # THIS IS A CERTIFIED ARTIFACT CREATION ZONE
      #===========================================

    # - name: Create THE ARTIFACTS
    #   uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: "bleeding_edge"
    #     prerelease: false
    #     title: "Development Build"
    #     files: ${{ steps.export.outputs.archive_directory }}/*

    - name: create release
      uses: ncipollo/release-action@v1.14.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*


    # - name: Create Windows Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: windows
    #     path: ${{ steps.export.outputs.build_directory }}/Windows Desktop

    # - name: Create Linux Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: windows
    #     path: ${{ steps.export.outputs.build_directory }}/LinuxX11

      #===========================================
      # THIS IS A CERTIFIED ARTIFACT CREATION ZONE
      #===========================================


    - name: Deploy to GitHub Pages ðŸš€
      uses: JamesIves/github-pages-deploy-action@releases/v4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: ${{ steps.export.outputs.build_directory }}/Web # The folder the action should deploy.
        clean-exclude: vercel.json
